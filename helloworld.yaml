apiVersion: v1
kind: Service
metadata:
  name: helloworld
  labels:
    app: helloworld
    service: helloworld
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: helloworld
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: helloworld
  labels:
    account: helloworld
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-v1
  labels:
    app: helloworld
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helloworld
      version: v1
  template:
    metadata:
      labels:
        app: helloworld
	version: v1
    spec:
      serviceAccountName: helloworld
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: helloworld
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
	ports:
        - containerPort: 80
	env:
        - name: TITLE
          value: "AKS Ingress Demo"
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: IfNotPresent #Always
	volumeMounts:
        - name: tmp
	  mountPath: /tmp
	securityContext:
          runAsUser: 1000
    volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-v2
  labels:
    app: helloworld
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helloworld
      version: v2
  template:
    metadata:
      labels:
        app: helloworld
	version: v2
    spec:
      serviceAccountName: helloworld
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: helloworld
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
	ports:
        - containerPort: 80
	env:
        - name: TITLE
          value: "AKS Ingress Demo"
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: IfNotPresent #Always
	volumeMounts:
        - name: tmp
          mountPath: /tmp
	  securityContext:
	    runAsUser: 1000
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-v3
  labels:
    app: helloworld
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helloworld
      version: v3
  template:
    metadata:
      labels:
        app: helloworld
	version: v3
    spec:
      serviceAccountName: helloworld
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: helloworld
        image: mcr.microsoft.com/azuredocs/aks-helloworld:v1
	ports:
        - containerPort: 80
	env:
        - name: TITLE
          value: "AKS Ingress Demo"
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: IfNotPresent #Always
	volumeMounts:
        - name: tmp
          mountPath: /tmp
	  securityContext:
            runAsUser: 1000
    volumes:
      - name: tmp
        emptyDir: {}
